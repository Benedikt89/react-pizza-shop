{"version":3,"sources":["Components/Cart/Cart.module.css","Components/Cart/Cart.tsx"],"names":["module","exports","CartItem","pizza","decreaseQuantity","increaseQuantity","removeFromOrder","className","style","tableRow","row","mainImg","src","photo_thumbnail","alt","text_short","description","name","size","rowCalc","col","onClick","id","btnSmall","quantity","btnSmallMinus","calculator","price","toFixed","btnSmallClose","compose","connect","state","order","getOrder","totalQuantity","getTotalQuantity","totalPrice","getTotalPrice","calculateOrder","orderItems","map","i","key","cartWrapper","rowBetween","to","buttonMain"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,YAAc,+CAA+C,UAAY,6CAA6C,IAAM,kBAAkB,QAAU,sCAAsC,IAAM,kBAAkB,WAAa,yCAAyC,SAAW,uCAAuC,QAAU,sBAAsB,WAAa,4CAA4C,SAAW,uBAAuB,cAAgB,iDAAiD,cAAgB,iDAAiD,MAAQ,oBAAoB,WAAa,yBAAyB,YAAc,mD,iCCD7pB,oFA8DMC,EAAW,SAAC,GAAiF,IAAhFC,EAA+E,EAA/EA,MAAOC,EAAwE,EAAxEA,iBAAkBC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,gBAC1D,OAEI,yBAAKC,UAAWC,IAAMC,UAClB,yBAAKF,UAAWC,IAAME,KAClB,yBAAKH,UAAWC,IAAMG,SAClB,yBAAKC,IAAKT,EAAMU,gBAAiBC,IAAKX,EAAMY,eAIpD,yBAAKR,UAAWC,IAAME,KAClB,yBAAKH,UAAWC,IAAMQ,aAClB,4BAAKb,EAAMc,MACX,8BAAOd,EAAMe,OAEjB,yBAAKX,UAAWC,IAAMQ,aAClB,8BAAOb,EAAMY,YACb,sEAIR,yBAAKR,UAAWC,IAAMW,SAClB,yBAAKZ,UAAWC,IAAMY,KAClB,4BACIC,QAAS,WACLhB,EAAiBF,EAAMmB,KAE3Bf,UAAWC,IAAMe,UAJrB,KAOA,8BAAM,2BAAIpB,EAAMqB,WAChB,4BACIH,QAAS,WACLjB,EAAiBD,EAAMmB,KAE3Bf,UAAWC,IAAMiB,eAJrB,MAQJ,yBAAKlB,UAAWC,IAAMkB,YAClB,+BAAQvB,EAAMwB,MAAQxB,EAAMqB,UAAUI,QAAQ,IAC9C,8BAAM,qCAId,4BACIP,QAAS,WACLf,EAAgBH,EAAMmB,KAE1Bf,UAAWC,IAAMqB,eAJrB,OAoBGC,4BACXC,aAToB,SAACC,GACrB,MAAO,CACHC,MAAOC,YAASF,GAChBG,cAAeC,YAAiBJ,GAChCK,WAAYC,YAAcN,MAKL,CAAC3B,qBAAkBD,qBAAkBE,oBAAiBiC,qBADpET,EApGF,SAAC,GAA+G,IAA9GG,EAA6G,EAA7GA,MAAO7B,EAAsG,EAAtGA,iBAAkBC,EAAoF,EAApFA,iBAAkBC,EAAkE,EAAlEA,gBAElDkC,GAFoH,EAAjDD,eAEtDN,EAAMQ,KAAI,SAAAC,GAAC,OAAI,kBAACxC,EAAD,CAC5ByC,IAAKD,EAAEpB,GACPnB,MAAOuC,EACPtC,iBAAkBA,EAClBC,iBAAkBA,EAClBC,gBAAiBA,QAGrB,OACI,6BACI,yBAAKC,UAAWC,IAAMC,UAClB,mDAEJ,yBAAKF,UAAWC,IAAMoC,aACjBJ,GAEL,yBAAKjC,UAAWC,IAAMqC,YAClB,kBAAC,IAAD,CAASC,GAAG,YACR,4BAAQvC,UAAWC,IAAMuC,YAAzB,YAIJ,kBAAC,IAAD,CAASD,GAAG,UACR,4BAAQvC,UAAWC,IAAMuC,YAAzB","file":"static/js/7.8adb1e39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cartWrapper\":\"Cart_cartWrapper__1gwN5 App_container__20Okq\",\"container\":\"Cart_container__3oQ_B App_container__20Okq\",\"row\":\"Cart_row__Y9HnA\",\"rowCalc\":\"Cart_rowCalc__HrM5K Cart_row__Y9HnA\",\"col\":\"Cart_col__2W6rq\",\"rowBetween\":\"Cart_rowBetween__3B3av Cart_row__Y9HnA\",\"tableRow\":\"Cart_tableRow__1A0RP Cart_row__Y9HnA\",\"mainImg\":\"Cart_mainImg__a5sWR\",\"buttonMain\":\"Cart_buttonMain__jrlQG App_mainBtn__2Gy0R\",\"btnSmall\":\"Cart_btnSmall__1tzCP\",\"btnSmallMinus\":\"Cart_btnSmallMinus__2NxEl Cart_btnSmall__1tzCP\",\"btnSmallClose\":\"Cart_btnSmallClose__1REav Cart_btnSmall__1tzCP\",\"empty\":\"Cart_empty__18vqT\",\"calculator\":\"Cart_calculator__2qCWV\",\"description\":\"Cart_description__o7mdF Cart_calculator__2qCWV\"};","import React from 'react';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {calculateOrder, decreaseQuantity, increaseQuantity, removeFromOrder} from \"../../Redux/pizzasReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {IOrderItem} from \"../../types/types\";\r\nimport {getOrder, getTotalPrice, getTotalQuantity} from \"../../Redux/selectors\";\r\nimport {AppStateType} from \"../../Redux/Store\";\r\nimport style from './Cart.module.css';\r\n\r\ninterface IConnectProps {\r\n    order: Array<IOrderItem>,\r\n    totalQuantity: number,\r\n    totalPrice: number\r\n}\r\ninterface IDispatchProps {\r\n    decreaseQuantity: (id:number)=> void;\r\n    increaseQuantity: (id:number)=> void;\r\n    removeFromOrder: (id:number)=> void;\r\n    calculateOrder: ()=> void;\r\n}\r\ninterface ICartItemProps {\r\n    pizza: IOrderItem,\r\n    decreaseQuantity: (id:number)=> void;\r\n    increaseQuantity: (id:number)=> void;\r\n    removeFromOrder: (id:number)=> void;\r\n}\r\nconst Cart = ({order, decreaseQuantity, increaseQuantity, removeFromOrder, calculateOrder}:IDispatchProps&IConnectProps) => {\r\n\r\n    let orderItems = order.map(i => <CartItem\r\n        key={i.id}\r\n        pizza={i}\r\n        decreaseQuantity={decreaseQuantity}\r\n        increaseQuantity={increaseQuantity}\r\n        removeFromOrder={removeFromOrder}\r\n    />);\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.tableRow}>\r\n                <h3>Items in your CART</h3>\r\n            </div>\r\n            <div className={style.cartWrapper}>\r\n                {orderItems}\r\n            </div>\r\n            <div className={style.rowBetween}>\r\n                <NavLink to=\"/catalog\">\r\n                    <button className={style.buttonMain}>\r\n                        To Menu\r\n                    </button>\r\n                </NavLink>\r\n                <NavLink to=\"/order\">\r\n                    <button className={style.buttonMain}>\r\n                        Order\r\n                    </button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst CartItem = ({pizza, decreaseQuantity, increaseQuantity, removeFromOrder}:ICartItemProps) => {\r\n    return (\r\n\r\n        <div className={style.tableRow}>\r\n            <div className={style.row}>\r\n                <div className={style.mainImg}>\r\n                    <img src={pizza.photo_thumbnail} alt={pizza.text_short}/>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={style.row}>\r\n                <div className={style.description}>\r\n                    <h6>{pizza.name}</h6>\r\n                    <span>{pizza.size}</span>\r\n                </div>\r\n                <div className={style.description}>\r\n                    <span>{pizza.text_short}</span>\r\n                    <span>Вес 500гр</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={style.rowCalc}>\r\n                <div className={style.col}>\r\n                    <button\r\n                        onClick={() => {\r\n                            increaseQuantity(pizza.id)\r\n                        }}\r\n                        className={style.btnSmall}\r\n                    >+\r\n                    </button>\r\n                    <span><b>{pizza.quantity}</b></span>\r\n                    <button\r\n                        onClick={() => {\r\n                            decreaseQuantity(pizza.id)\r\n                        }}\r\n                        className={style.btnSmallMinus}\r\n                    >-\r\n                    </button>\r\n                </div>\r\n                <div className={style.calculator}>\r\n                    <span>{(pizza.price * pizza.quantity).toFixed(2)}</span>\r\n                    <span><b>BYN</b></span>\r\n\r\n                </div>\r\n            </div>\r\n            <button\r\n                onClick={() => {\r\n                    removeFromOrder(pizza.id)\r\n                }}\r\n                className={style.btnSmallClose}\r\n            >X\r\n            </button>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        order: getOrder(state),\r\n        totalQuantity: getTotalQuantity(state),\r\n        totalPrice: getTotalPrice(state),\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {increaseQuantity, decreaseQuantity, removeFromOrder, calculateOrder})\r\n)(Cart);\r\n"],"sourceRoot":""}